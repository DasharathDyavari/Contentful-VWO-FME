{"ast":null,"code":"import { get } from \"lodash\";\nexport const getEntryStatus = sys => {\n  if (sys.archivedVersion) {\n    return 'archived';\n  } else if (sys.publishedVersion) {\n    if (sys.version > sys.publishedVersion + 1) {\n      return 'changed';\n    } else {\n      return 'published';\n    }\n  } else {\n    return 'draft';\n  }\n};\nexport function getRequiredEntryInformation(entry, contentTypes, defaultLocale) {\n  console.log('here: ', entry, contentTypes);\n  const contentTypeId = get(entry, ['sys', 'contentType', 'sys', 'id']);\n  const contentType = contentTypes.find(contentType => contentType.sys.id === contentTypeId);\n  if (!contentType) {\n    throw new Error(`Content type ${contentTypeId} is not present`);\n  }\n  const displayField = contentType.displayField;\n  const descriptionFieldType = contentType.fields.filter(field => field.id != displayField).find(field => field.type == 'Text');\n  const description = descriptionFieldType ? get(entry, ['fields', descriptionFieldType.id, defaultLocale], '') : '';\n  const title = get(entry, ['fields', displayField, defaultLocale], 'Untitled');\n  const status = getEntryStatus(entry.sys);\n  return {\n    title,\n    description,\n    contentType: contentType.name,\n    status\n  };\n}\nexport const mapVwoVariationsAndContent = (vwoVariations, entries, contentTypes, defaultLocale) => {\n  console.log('variations: ', vwoVariations);\n  return vwoVariations.map(vwoVariation => {\n    if (vwoVariation.jsonContent.value != 'notSet') {\n      let contentId = vwoVariation.jsonContent.value;\n      let entry = entries.find(entry => entry.sys.id == contentId);\n      if (!entry) {\n        return {\n          vwoVariation\n        };\n      }\n      let entryInformation = getRequiredEntryInformation(entry, contentTypes, defaultLocale);\n      return {\n        vwoVariation,\n        entry: entryInformation\n      };\n    }\n    return {\n      vwoVariation\n    };\n  });\n};","map":{"version":3,"names":["get","getEntryStatus","sys","archivedVersion","publishedVersion","version","getRequiredEntryInformation","entry","contentTypes","defaultLocale","console","log","contentTypeId","contentType","find","id","Error","displayField","descriptionFieldType","fields","filter","field","type","description","title","status","name","mapVwoVariationsAndContent","vwoVariations","entries","map","vwoVariation","jsonContent","value","contentId","entryInformation"],"sources":["/Users/dasharathdyavari/Desktop/vwo-fme/src/utils.js"],"sourcesContent":["import { get } from \"lodash\";\n\nexport const getEntryStatus = sys => {\n   if (sys.archivedVersion) {\n     return 'archived';\n   } else if (sys.publishedVersion) {\n     if (sys.version > sys.publishedVersion + 1) {\n       return 'changed';\n     } else {\n       return 'published';\n     }\n   } else {\n     return 'draft';\n   }\n };\n\nexport function getRequiredEntryInformation(entry, contentTypes, defaultLocale){\n  console.log('here: ',entry,contentTypes);\n   const contentTypeId = get(entry, ['sys', 'contentType', 'sys', 'id']);\n   const contentType = contentTypes.find(contentType => contentType.sys.id === contentTypeId);\n\n   if(!contentType){\n      throw new Error(`Content type ${contentTypeId} is not present`);\n   }\n\n   const displayField = contentType.displayField;\n   const descriptionFieldType = contentType.fields\n   .filter(field => field.id != displayField)\n   .find(field => field.type == 'Text');\n\n   const description = descriptionFieldType\n    ? get(entry, ['fields', descriptionFieldType.id, defaultLocale], '')\n    : '';\n\n    const title = get(entry, ['fields',displayField,defaultLocale],'Untitled');\n    const status = getEntryStatus(entry.sys);\n\n    return {\n      title,\n      description,\n      contentType: contentType.name,\n      status\n    }\n}\n\nexport const mapVwoVariationsAndContent = (vwoVariations,entries, contentTypes, defaultLocale) => {\n  console.log('variations: ',vwoVariations)\n  return vwoVariations.map(vwoVariation => {\n    if(vwoVariation.jsonContent.value != 'notSet'){\n      let contentId = vwoVariation.jsonContent.value;\n      let entry = entries.find(entry => entry.sys.id == contentId);\n      if(!entry){\n        return {vwoVariation};\n      }\n      let entryInformation = getRequiredEntryInformation(entry, contentTypes, defaultLocale);\n      return {\n        vwoVariation,\n        entry: entryInformation\n      }\n    }\n    return {vwoVariation};\n  })\n}"],"mappings":"AAAA,SAASA,GAAG,QAAQ,QAAQ;AAE5B,OAAO,MAAMC,cAAc,GAAGC,GAAG,IAAI;EAClC,IAAIA,GAAG,CAACC,eAAe,EAAE;IACvB,OAAO,UAAU;EACnB,CAAC,MAAM,IAAID,GAAG,CAACE,gBAAgB,EAAE;IAC/B,IAAIF,GAAG,CAACG,OAAO,GAAGH,GAAG,CAACE,gBAAgB,GAAG,CAAC,EAAE;MAC1C,OAAO,SAAS;IAClB,CAAC,MAAM;MACL,OAAO,WAAW;IACpB;EACF,CAAC,MAAM;IACL,OAAO,OAAO;EAChB;AACF,CAAC;AAEF,OAAO,SAASE,2BAA2BA,CAACC,KAAK,EAAEC,YAAY,EAAEC,aAAa,EAAC;EAC7EC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACJ,KAAK,EAACC,YAAY,CAAC;EACvC,MAAMI,aAAa,GAAGZ,GAAG,CAACO,KAAK,EAAE,CAAC,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;EACrE,MAAMM,WAAW,GAAGL,YAAY,CAACM,IAAI,CAACD,WAAW,IAAIA,WAAW,CAACX,GAAG,CAACa,EAAE,KAAKH,aAAa,CAAC;EAE1F,IAAG,CAACC,WAAW,EAAC;IACb,MAAM,IAAIG,KAAK,CAAC,gBAAgBJ,aAAa,iBAAiB,CAAC;EAClE;EAEA,MAAMK,YAAY,GAAGJ,WAAW,CAACI,YAAY;EAC7C,MAAMC,oBAAoB,GAAGL,WAAW,CAACM,MAAM,CAC9CC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACN,EAAE,IAAIE,YAAY,CAAC,CACzCH,IAAI,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAI,IAAI,MAAM,CAAC;EAEpC,MAAMC,WAAW,GAAGL,oBAAoB,GACrClB,GAAG,CAACO,KAAK,EAAE,CAAC,QAAQ,EAAEW,oBAAoB,CAACH,EAAE,EAAEN,aAAa,CAAC,EAAE,EAAE,CAAC,GAClE,EAAE;EAEJ,MAAMe,KAAK,GAAGxB,GAAG,CAACO,KAAK,EAAE,CAAC,QAAQ,EAACU,YAAY,EAACR,aAAa,CAAC,EAAC,UAAU,CAAC;EAC1E,MAAMgB,MAAM,GAAGxB,cAAc,CAACM,KAAK,CAACL,GAAG,CAAC;EAExC,OAAO;IACLsB,KAAK;IACLD,WAAW;IACXV,WAAW,EAAEA,WAAW,CAACa,IAAI;IAC7BD;EACF,CAAC;AACL;AAEA,OAAO,MAAME,0BAA0B,GAAGA,CAACC,aAAa,EAACC,OAAO,EAAErB,YAAY,EAAEC,aAAa,KAAK;EAChGC,OAAO,CAACC,GAAG,CAAC,cAAc,EAACiB,aAAa,CAAC;EACzC,OAAOA,aAAa,CAACE,GAAG,CAACC,YAAY,IAAI;IACvC,IAAGA,YAAY,CAACC,WAAW,CAACC,KAAK,IAAI,QAAQ,EAAC;MAC5C,IAAIC,SAAS,GAAGH,YAAY,CAACC,WAAW,CAACC,KAAK;MAC9C,IAAI1B,KAAK,GAAGsB,OAAO,CAACf,IAAI,CAACP,KAAK,IAAIA,KAAK,CAACL,GAAG,CAACa,EAAE,IAAImB,SAAS,CAAC;MAC5D,IAAG,CAAC3B,KAAK,EAAC;QACR,OAAO;UAACwB;QAAY,CAAC;MACvB;MACA,IAAII,gBAAgB,GAAG7B,2BAA2B,CAACC,KAAK,EAAEC,YAAY,EAAEC,aAAa,CAAC;MACtF,OAAO;QACLsB,YAAY;QACZxB,KAAK,EAAE4B;MACT,CAAC;IACH;IACA,OAAO;MAACJ;IAAY,CAAC;EACvB,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}